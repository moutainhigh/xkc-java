<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tahoecn.xkc.mapper.sys.SAccountMapper">

    <select id="getUserJob" resultType="java.util.HashMap">
        SELECT
        S.ID UserID ,
        S.UserName ,
        S.EmployeeName ,
        S.AuthCompanyID ,
        AC.AuthCompanyName ,
        '' AS ProjectID ,
        (
        SELECT
        [JobID] + ','
        FROM
        [DBO].[S_JobsUserRel]
        WHERE
        AccountID = S.ID FOR XML PATH('') ) JobIds
        FROM
        S_Account S
        INNER JOIN
        S_AuthCompany AC
        ON
        S.AuthCompanyID = AC.ID
        WHERE
        S.Status = 1
        AND S.IsDel = 0
        AND S.UserName = #{userName}
    </select>

    <select id="getUserPorject" resultType="java.util.HashMap">
        SELECT DISTINCT top 1
        v.OrgID ,
        v.OrgName ,
        v.AuthCompanyID ,
        v.AuthCompanyName ,
        v.ProductID ,
        v.ProductName ,
        v.Style ,
        v.Theme
        FROM    V_Orgs v
        WHERE   v.ProductID = #{productID}
        AND EXISTS(
        SELECT 1 FROM dbo.F_GetAllOrgID(#{userId},'') a WHERE a.ID = v.OrgID
        )
    </select>

    <select id="getUserProduct" resultType="java.util.HashMap">
        <![CDATA[
            SELECT DISTINCT
                    p.ID ,
                    p.ProductName ,
                    php.Url ,
                    acod.Theme,
                    o.OrgCategory
            FROM    dbo.S_Account a
                    INNER JOIN dbo.S_JobsUserRel jur ON a.ID = jur.AccountID
                    INNER JOIN dbo.S_Jobs j ON jur.JobID = j.ID
                    INNER JOIN dbo.S_Organization o ON j.JobOrgID = o.ID
                    INNER JOIN dbo.S_Product p ON j.ProductID = p.ID
                    INNER JOIN dbo.S_AuthCompanyOrderDetail acod ON j.ProductID = acod.ProductID
                                                                    AND j.AuthCompanyID = acod.AuthCompanyID
                    INNER JOIN dbo.S_AuthCompany ac ON j.AuthCompanyID = ac.ID
                    INNER JOIN dbo.V_ProductHomePage php ON j.ProductID = php.ProductID
            WHERE   a.IsDel = 0
                    AND a.[Status] = 1
                    AND a.UserName = #{userName}
                    AND j.IsDel = 0
                    AND j.[Status] = 1
                    AND o.IsDel = 0
                    AND o.[Status] = 1
                    AND p.IsDel = 0
                    AND p.[Status] = 1
                    AND acod.IsDel = 0
                    AND acod.[Status] = 1
                    AND acod.EndTime >= GETDATE()
                    AND ac.IsDel = 0
                    AND ac.[Status] = 1
            ORDER BY p.ProductName DESC
      ]]>
    </select>

    <select id="getUserWXApp" resultType="java.util.HashMap">
        <![CDATA[
        SELECT 1 AS A
      ]]>
    </select>

    <select id="getUserJobs" resultType="java.util.HashMap">
        <![CDATA[
              SELECT * FROM(
              SELECT DISTINCT
                j.* ,
                o.OrgName AS JobOrgName ,
                CASE WHEN ( SELECT  COUNT(1)
                            FROM    dbo.S_Organization s1
                            WHERE   s1.PID = o.ID
                                    AND s1.IsDel = 0
                                    AND s1.[Status] = 1
                          ) > 0 THEN 0
                     ELSE 1
                END AS OrgIsLast ,
                ( ''
                ) AS AllOrgID ,
                o.FullPath
        FROM    dbo.S_Jobs j
                INNER JOIN dbo.S_JobsUserRel jur ON j.ID = jur.JobID
                INNER JOIN dbo.S_Account a ON jur.AccountID = a.ID
                INNER JOIN dbo.S_Organization o ON j.JobOrgID = o.ID
        WHERE   j.IsDel = 0
                AND j.[Status] = 1
                AND a.IsDel = 0
                AND a.[Status] = 1
                AND o.IsDel = 0
                AND o.[Status] = 1
                    AND a.UserName = #{userName}
                  AND j.ProductID = #{productID}
                   ) z ORDER BY z.OrgIsLast,LEN(z.FullPath)
      ]]>
    </select>

    <select id="getUserJobMenus" resultType="java.util.HashMap">
        <![CDATA[
            SELECT DISTINCT
              *
            FROM [dbo].[F_GetAllJobMenu_xkc](#{userName},#{productID})
            ORDER BY IsHomePage DESC ,
              Levels ASC ,
              ListIndex ASC
        ]]>
    </select>

    <select id="getJobFunctions" resultType="java.util.HashMap">
        <![CDATA[
        SELECT DISTINCT
        	 t.JobID,
        	 f.ID AS FuncID,
        	 f.FuncName,
        	 f.FuncCode,
        	 f.FuncType
        FROM 
        (
        	SELECT 
        		j.ID AS JobID,
        		jfr.FuncID  
        	FROM dbo.S_Account a 
        		INNER JOIN dbo.S_JobsUserRel jur ON a.ID = jur.AccountID 
        		INNER JOIN dbo.S_Jobs j ON jur.JobID = j.ID 
        		INNER JOIN dbo.S_JobsFunctionsRel jfr ON j.ID = jfr.JobID 
        	WHERE a.UserName = #{userName}
        		AND j.IsDel = 0 AND j.[Status] = 1 
        		AND j.ProductID = #{productID} 
        	
        	UNION 
        	
        	SELECT 
        		j.ID,
        		cjfr.FuncID 
        	FROM dbo.S_Account a 
        		INNER JOIN dbo.S_JobsUserRel jur ON a.ID = jur.AccountID 
        		INNER JOIN dbo.S_Jobs j ON jur.JobID = j.ID 
        		INNER JOIN dbo.S_CommonJobs cj ON j.CommonJobID = cj.ID 
        		INNER JOIN dbo.S_CommonJobsFunctionsRel cjfr ON cj.ID = cjfr.JobID 
        	WHERE a.UserName = #{userName}
        		AND j.IsDel = 0 AND j.[Status] = 1 
        		AND j.ProductID = #{productID}
        		AND cj.IsDel = 0 AND cj.[Status] = 1 
        		AND cj.ProductID = #{productID}
        ) t INNER JOIN dbo.S_Functions f ON t.FuncID = f.ID 
        WHERE f.IsDel = 0 AND f.[Status] = 1 
      ]]>
    </select>

    <select id="getJobProject" resultType="java.util.HashMap" statementType="CALLABLE">
        <![CDATA[
          {call	 [dbo].[getOrganization](#{userName,mode=IN})}
        ]]>
    </select>
    <select id="mLoginSelectByAccount" resultType="java.util.HashMap" >
        <![CDATA[
            SELECT TOP 1
           *
    FROM
    (
        SELECT A.ID UserID,
               A.Name,
               A.TelPhone Mobile,
               A.HeadImg,
               CASE ISNULL(B.ReceptionGroupID, '')
                   WHEN '' THEN
                       B.ProjectID
                   ELSE
                       B.ReceptionGroupID
               END OrgID,
               CASE ISNULL(C.Name, '')
                   WHEN '' THEN
                       P.Name
                   ELSE
                       C.Name
               END OrgPath,
               B.ProjectID,
               P.Name ProjectName,
               B.RoleID JobID,
               dbo.F_DictCode(B.RoleID) JobCode,
               dbo.F_DictName(B.RoleID) JobName,
               ISNULL(U.AccountType, S.AccountType) AccountType,
               CASE C.Nature
                   WHEN 3 THEN
                       '0E88065E-AF3E-4905-8809-7BD30610323F'
                   WHEN 4 THEN
                       'DBCF76B2-BB1D-438C-B562-7A6FF3D9163A'
                   WHEN 5 THEN
                       '8D70D821-3BD4-46D1-8342-8B16C4BE642A'
                   WHEN 6 THEN
                       'FC09F0DF-D3DF-4378-91C0-7146EC451F43'
                   WHEN 7 THEN
                       'C07D5987-ACDD-40B8-9CBD-6257AA59C88C'
                   ELSE
                       ''
               END ChannelTypeID,
               CASE C.Nature
                   WHEN 1 THEN
                       '自销'
                   WHEN 2 THEN
                       '代理'
                   WHEN 3 THEN
                       '外展'
                   WHEN 4 THEN
                       '外呼'
                   WHEN 5 THEN
                       '拦截'
                   WHEN 6 THEN
                       '圈层'
                   WHEN 7 THEN
                       '外拓'
                   ELSE
                       ''
               END ChannelType,
               ISNULL(U.Password, S.Password) Password,
               P.IsNoAllotRole,
               P.AllowDeviceType,
               (CASE
                    WHEN P.AllowDeviceType = 1
                         OR P.AllowDeviceType = 3 THEN
                        0
                    ELSE
                        1
                END
               ) AllowDeviceTypeSort,
               P.IsNoMobileVerify,
               CASE
                   WHEN UP.ProjectID = B.ProjectID THEN
               (CASE
                    WHEN UPJ.JobCode = (dbo.F_DictCode(B.RoleID)) THEN
                        0
                    ELSE
                        1
                END
               )
                   ELSE
               (CASE
                    WHEN UPJ.JobCode = (dbo.F_DictCode(B.RoleID)) THEN
                        2
                    ELSE
                        3
                END
               )
               END PSort,
               S.Status AccountStatus,
               P.OutUserAllowModifyPwd,
               P.OutUserIsShowHouseStyle,
               P.HouseStyle,
               P.IsOffSiteSale,
               P.IsLocationValidate,
               P.SelfSoldTeamIsShowHouseStyle,
               P.AgentTeamIsShowHouseStyle,
               ISNULL(P.TwoRankAllowSubscribe, 0) TwoRankAllowSubscribe,
               dbo.F_GetIsCustomerGrabSheet(P.ID, B.RoleID, 1) IsGGCCustomerGrabSheet,
               dbo.F_GetIsCustomerGrabSheet(P.ID, B.RoleID, 2) IsFXCBCustomerGrabSheet,
               CWXU.ID WXUserID,
               CWXU.UnionID,
               ASP.ID ShareProjectID
        FROM B_SalesUser A
            INNER JOIN B_SalesGroupMember B
                ON A.ID = B.MemberID
                   AND B.IsDel = 0
                   AND B.Status = 1
            INNER JOIN B_Project P
                ON P.ID = B.ProjectID
                   AND P.IsDel = 0
                   AND P.Status = 1
            INNER JOIN S_Account S
                ON A.ID = S.ID
                   AND S.IsDel = 0
            LEFT JOIN B_SalesGroup C
                ON C.ID = B.ReceptionGroupID
                   AND C.IsDel = 0
                   AND C.Status = 1
            LEFT JOIN S_AccountUserType U
                ON S.UserName = U.UserName
            LEFT JOIN S_AccountUserProject UP
                ON UP.UserID = S.ID
            LEFT JOIN S_AccountUserProjectJob UPJ
                ON UPJ.UserID = S.ID
                   AND UPJ.ProjectID = B.ProjectID
            LEFT JOIN dbo.C_WXUser CWXU
                ON CWXU.BindChannelUserID = A.ID
                   AND CWXU.IsDel = 0
                   AND CWXU.Status = 1
            LEFT JOIN dbo.A_ShareProject ASP
                ON ASP.ProjectID = P.ID
                   AND ASP.IsDel = 0
                   AND ASP.Status = 1
        WHERE A.IsDel = 0
              AND A.Status = 1
              AND S.UserName = LTRIM(RTRIM(#{userName}))
              AND (CASE
                       WHEN dbo.F_DictCode(B.RoleID) IN ( 'XSZC', 'FJ' )
                            AND P.IsNoAllotRole = 1 THEN
                           0
                       ELSE
                           1
                   END
                  ) = 1
    ) T
    ORDER BY T.PSort,
             T.IsNoAllotRole,
             T.AllowDeviceTypeSort,
             T.Name
        ]]>
    </select>

    <select id="mLoginSelectByChannelUser" resultType="java.util.HashMap" >
        <![CDATA[
               SELECT TOP 1
               A.ID UserID,
               A.Name,
               A.Mobile,
               A.HeadImg,
               '' OrgID,
               '' OrgPath,
               ISNULL(C.ProjectID, '') ProjectID,
               dbo.F_GetProjectName(ISNULL(C.ProjectID, '')) ProjectName,
               '48FC928F-6EB5-4735-BF2B-29B1F591A582' JobID,
               'JZ' JobCode,
               '兼职' JobName,
               3 AccountType,
               ISNULL(C.TaskType, A.ChannelTypeID) ChannelTypeID,
               Password,
               0 IsNoAllotRole,
               0 IsNoMobileVerify,
               0 PSort,
               1 OutUserAllowModifyPwd,
               0 OutUserIsShowHouseStyle,
               0 HouseStyle,
               P.AllowDeviceType,
               1 AccountStatus
        FROM dbo.B_ChannelUser A
            LEFT JOIN B_ChannelTask_ChannelUser B
                ON A.ID = B.ChannelUserID
                   AND B.IsDel = 0
                   AND B.Status < 3
            LEFT JOIN B_ChannelTask C
                ON C.ID = B.ChannelTaskID
                   AND C.IsDel = 0
                   AND C.Status < 3
            LEFT JOIN dbo.B_Project P
                ON C.ProjectID = P.ID
        WHERE (A.ChannelType = '兼职' or a.ChannelType = '自由经纪')
              AND A.UserName = #{userName}
        ORDER BY C.ID DESC
        ]]>
    </select>
    <select id="salesUserProjectList" resultType="java.util.HashMap" >
        SELECT DISTINCT
        B.ProjectID,
        P.Name ProjectName
        FROM B_SalesUser A
        INNER JOIN B_SalesGroupMember B
        ON A.ID = B.MemberID
        AND B.IsDel = 0
        AND B.Status = 1
        INNER JOIN B_Project P
        ON P.ID = B.ProjectID
        AND P.IsDel = 0
        AND P.Status = 1
        WHERE A.IsDel = 0
        AND A.Status = 1
        AND A.ID = #{userId}
        AND (CASE
        WHEN dbo.F_DictCode(B.RoleID) IN ( 'XSZC', 'FJ' )
        AND P.IsNoAllotRole = 1 THEN
        0
        ELSE
        1
        END
        ) = 1
        ORDER BY P.Name;
    </select>
    <select id="userProjectJobList" resultType="java.util.HashMap">
        <![CDATA[
            SELECT B.RoleID JobID,
                   dbo.F_DictCode(B.RoleID) JobCode,
                   dbo.F_DictName(B.RoleID) JobName
            FROM B_SalesUser A
                JOIN B_SalesGroupMember B
                    ON A.ID = B.MemberID
                       AND B.IsDel = 0
                       AND B.Status = 1
                INNER JOIN B_Project P
                    ON P.ID = B.ProjectID
                       AND P.IsDel = 0
                       AND P.Status = 1
            WHERE A.IsDel = 0
                  AND A.Status = 1
                  AND A.ID = #{userId}
                  AND B.ProjectID = #{projectID}
                  AND (CASE
                           WHEN dbo.F_DictCode(B.RoleID) IN ( 'XSZC', 'FJ' )
                                AND P.IsNoAllotRole = 1 THEN
                               0
                           ELSE
                               1
                       END
                      ) = 1;
        ]]>
    </select>
    <select id="GetMenuAndFunList_Select" resultType="java.util.HashMap">
        <![CDATA[
        SELECT b.MenuName ,
              b.Url
        FROM   dbo.S_CommonJobsMenuRel a
              JOIN dbo.S_Dictionary s ON a.JobID = s.ID
              INNER JOIN dbo.S_Menus_xkc b ON a.MenuID = b.ID
                                          AND b.IsDel = 0
                                          AND b.Creator = '99'
        WHERE  s.DictCode = #{jobCode}
              AND a.IsDel = 0
        UNION ALL
        SELECT b.FuncName ,
              b.FuncCode
        FROM   dbo.S_CommonJobsFunctionsRel a
              JOIN dbo.S_Dictionary s ON a.JobID = s.ID
              INNER JOIN dbo.S_Functions b ON a.FuncID = b.ID
                                              AND b.IsDel = 0
                                              AND b.Creator = '99'
        WHERE  s.DictCode = #{jobCode}
              AND a.IsDel = 0
        UNION ALL
        SELECT
            b.MenuName,
            b.Url
         FROM dbo.A_ShareCommonJobsMenuRel a
            JOIN dbo.S_Dictionary s ON a.JobID = s.ID
            INNER JOIN dbo.S_Menus_xkc b ON a.MenuID = b.ID
                                        AND b.IsDel = 0
            WHERE a.ProjectID = #{projectID}
                AND s.DictCode = #{jobCode}
                AND a.IsDel = 0
        ]]>
    </select>

    <select id="SystemUserListByOrgID_Select" resultType="java.util.HashMap" parameterType="string">

      SELECT
              a.[ID] ,
              a.[UserName] ,
              a.[EmployeeName] ,
              a.[Gender] ,
              a.[OfficeTel] ,
              a.[EmployeeCode] ,
              a.[OfficeMail] ,
              a.[Mobile] ,
              a.UserOrgID ,
              o.ID OrgID,
              o.FullPath AS OrgName,
              j.ID JobID,
              j.JobName,
              a.Address ,
              a.[Status] ,
              a.AccountType,
              a.CreateTime
      FROM    [S_Account] a
              INNER JOIN dbo.S_JobsUserRel jur ON a.IsDel = 0 AND a.ID = jur.AccountID
              INNER JOIN dbo.S_Jobs j ON jur.JobID = j.ID AND j.IsDel = 0
              INNER JOIN S_Organization o ON j.JobOrgID = o.ID AND o.IsDel = 0
      <where>  a.AuthCompanyID = #{AuthCompanyID}
              AND ( #{Key} = ''
                    OR a.UserName LIKE concat('%',#{Key},'%')
                    OR a.EmployeeName LIKE concat('%',#{Key},'%')
                  )
                AND o.FullPath LIKE ( SELECT FullPath FROM dbo.S_Organization WHERE ID = #{OrgID} ) + '%'
          <if test="Type != 0">
          and AccountType = #{Type}
          </if>
              AND a.IsDel = 0
      </where>
        ORDER BY a.CreateTime
    </select>


    <select id="SystemUserListByOrgID_SelectN" resultType="java.util.HashMap" parameterType="string">
        <!--SELECT t.*,o.FullPath AS OrgName FROM-->
        <!--S_Organization o INNER JOIN-->
        <!--(-->
        <!--SELECT-->
        <!--a.[ID] ,-->
        <!--a.[UserName] ,-->
        <!--a.[EmployeeName] ,-->
        <!--a.[Gender] ,-->
        <!--a.[OfficeTel] ,-->
        <!--a.[EmployeeCode] ,-->
        <!--a.[OfficeMail] ,-->
        <!--a.[Mobile] ,-->
        <!--a.UserOrgID ,-->
        <!--a.Address ,-->
        <!--a.[Status] ,-->
        <!--a.AccountType,-->
        <!--a.CreateTime-->
        <!--FROM    [S_Account] a-->
        <!--WHERE   a.UserOrgID IN (SELECT ID FROM S_Organization WHERE FullPath LIKE '${FullPath}%')-->
        <!--AND ( #{Key} = ''-->
        <!--OR a.UserName LIKE concat('%',#{Key},'%')-->
        <!--OR a.EmployeeName LIKE concat('%',#{Key},'%')-->
        <!--)-->
        <!--AND a.AuthCompanyID = #{AuthCompanyID}-->
        <!--<if test="Type != 0">-->
            <!--and AccountType = #{Type}-->
        <!--</if>-->
        <!--AND a.IsDel=0-->
        <!--) t-->
        <!--ON t.UserOrgID=o.ID AND o.IsDel=0-->
        <!--ORDER BY t.CreateTime DESC-->

        SELECT * FROM (
        SELECT
        t.*,
        o.FullPath AS OrgName
        FROM
        S_Organization o
        INNER JOIN (
        SELECT
        a.[ID],
        a.[UserName],
        a.[EmployeeName],
        a.[Gender],
        a.[OfficeTel],
        a.[EmployeeCode],
        a.[OfficeMail],
        a.[Mobile],
        a.UserOrgID ,
        a.Address ,
        a.[Status],
        (CASE WHEN  a.AccountType = 2
        THEN 2
        WHEN a.AccountType=3
        THEN 2
        ELSE 1  END) AS AccountType,
        a.CreateTime
        FROM
        [S_Account] a
        WHERE
        a.UserOrgID IN ( SELECT ID FROM S_Organization WHERE FullPath LIKE '${FullPath}%' )
        <!-- AND ( #{Key} = ''
        OR a.UserName LIKE concat('%',#{Key},'%')
        OR a.EmployeeName LIKE concat('%',#{Key},'%')
        ) -->
        <if test="Key != null and Key != ''">
        	and a.EmployeeName LIKE concat('%',#{Key},'%')
        </if>
        <if test="UserName != null and UserName != ''">
        	and a.UserName LIKE concat('%',#{UserName},'%')
        </if>
        <if test="Mobile != null and Mobile != ''">
        	and a.Mobile LIKE concat('%',#{Mobile},'%')
        </if>
        <if test="Status != null and Status != ''">
        	and a.Status = #{Status}
        </if>

        AND a.AuthCompanyID = #{AuthCompanyID}
        <if test="Type != 0">
            and a.AccountType = #{Type}
        </if>
        AND a.IsDel= 0
        ) t ON t.UserOrgID= o.ID
        AND o.IsDel= 0 AND o.Status=1
        <if test="FullPath == '第三方组织/泰禾/泰禾移动营销管理平台/泰禾集团'">
        UNION
        SELECT
        b.[ID],
        b.[UserName],
        b.[EmployeeName],
        b.[Gender],
        b.[OfficeTel],
        b.[EmployeeCode],
        b.[OfficeMail],
        b.[Mobile],
        b.UserOrgID,
        b.Address,
        b.[Status],
        (CASE WHEN  b.AccountType = 2
        THEN 2
        WHEN b.AccountType=3
        THEN 2
        ELSE 1  END) AS AccountType,
        b.CreateTime,
        '' AS OrgName
        FROM
        S_Account b
        WHERE
        b.AuthCompanyID = #{AuthCompanyID}
        AND b.IsDel = 0
        <!-- AND ( #{Key} = ''
        OR b.UserName LIKE concat('%',#{Key},'%')
        OR b.EmployeeName LIKE concat('%',#{Key},'%')
        ) -->
        <if test="Key != null and Key != ''">
        	and b.EmployeeName LIKE concat('%',#{Key},'%')
        </if>
        <if test="UserName != null and UserName != ''">
        	and b.UserName LIKE concat('%',#{UserName},'%')
        </if>
        <if test="Mobile != null and Mobile != ''">
        	and b.Mobile LIKE concat('%',#{Mobile},'%')
        </if>
        <if test="Status != null and Status != ''">
        	and b.Status = #{Status}
        </if>
        <if test="Type != 0">
            and b.AccountType = #{Type}
        </if>
        AND b.UserOrgID IS NULL
        </if>
        ) q
        ORDER BY CreateTime DESC
    </select>

    <select id="insertJob" resultType="java.util.HashMap" parameterType="string">
        SELECT DISTINCT
        jur.JobID ,
        j.JobName ,
        j.CommonJobID
        FROM
        dbo.S_Account a
        INNER JOIN dbo.S_JobsUserRel jur ON a.ID = jur.AccountID
        INNER JOIN dbo.S_Jobs j ON jur.JobID = j.ID
        WHERE
        a.ID = #{UserID}
        AND j.IsDel = 0
        AND j.[Status] = 1
        AND j.AuthCompanyID =#{AuthCompanyID}
        AND j.ProductID =#{ProductID};
    </select>
</mapper>
