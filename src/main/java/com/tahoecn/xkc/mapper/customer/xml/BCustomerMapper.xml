<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tahoecn.xkc.mapper.customer.BCustomerMapper">

    <select id="customerChangePageList_Select" resultType="java.util.Map">
        <![CDATA[
            SELECT
            m.ClueID,
            m.CustomerID,
            m.CustomerName,
            m.CustomerMobile,
            CASE WHEN dbo.F_DictName(m.CustomerRank) <> '' THEN dbo.F_DictName(m.CustomerRank) ELSE '1级' END CustomerRank,
            dbo.F_GetClueStatusName(m.Status, 0)                                                             Status,
            m.InvalidReason,
            m.ComeOverdueTime,
            m.TradeOverdueTime,
            dbo.F_GetSaleUserName(m.ConfirmUserId)                                                           ConfirmUserName,
            m.ConfirmTime,
            m.ProjectID,
            dbo.F_DictName(m.SourceType)                                                                     SourceType,
            m.ReportTime,
            m.TheFirstVisitDate,
            m.ReportUserID,
            m.ReportUserName,
            m.ReportUserMobile,
            m.ChannelName,
            m.OpportunityID,
            dbo.F_GetZJDF(m.OpportunityID)                                                                   ZJDF,
            STUFF((SELECT ',' + r.RoomCode
            FROM dbo.B_Room r
            INNER JOIN dbo.B_Building b ON r.BuildingID = b.ID
            WHERE r.ID
            IN
            (SELECT mt.RoomGUID
            FROM dbo.B_Opportunity o
            INNER JOIN dbo.B_CustomerAttach ca ON o.ID = ca.OpportunityID
            INNER JOIN dbo.C_MYTrade mt ON mt.OppGUID = ca.ID
            WHERE o.ID = m.OpportunityID)
            AND r.ProjectID in (select ID from B_Project where PID = #{projectID}) FOR XML PATH ('')), 1, 1,
            '')                                                                                        Room,
            dbo.F_GetClueStatusName('', m.OpportunityStatus)                                                 OpportunityStatus
            FROM (
            SELECT *
            FROM (
            SELECT DISTINCT b.ID                        ClueID,
            b.CustomerPotentialID       CustomerID,
            b.Name                      CustomerName,
            b.Mobile                    CustomerMobile,
            CASE
            WHEN o.CustomerRank IS NOT NULL THEN o.CustomerRank
            ELSE b.CustomerRank END CustomerRank,
            b.Status,
            b.InvalidReason,
            b.ComeOverdueTime,
            b.TradeOverdueTime,
            b.ConfirmUserId,
            b.ConfirmTime,
            b.IntentProjectID           ProjectID,
            b.SourceType,
            b.SourceType                SourceTypeID,
            b.ReportUserID,
            b.ReportUserName,
            b.ReportUserMobile,
            b.CreateTime AS             ReportTime,
            o.TheFirstVisitDate,
            CO.OrgName                  ChannelName,
            b.ReportUserOrg,
            o.ID                        OpportunityID,
            o.Status                    OpportunityStatus
            FROM B_Clue b
            LEFT JOIN dbo.B_Opportunity o
            ON b.ID = o.ClueID AND o.IsDel = 0 AND o.ProjectID = #{projectID}
            LEFT JOIN B_ChannelOrg CO ON CO.ID = b.ReportUserOrg AND CO.IsDel = 0
            LEFT JOIN dbo.B_CustomerAttach A
            ON A.OpportunityID = o.ID AND A.IsDel = 0 AND A.ProjectID = #{projectID}
            WHERE b.IsDel = 0
            AND b.IntentProjectID = #{projectID}
            AND b.SourceType IS NOT NULL
            AND b.SourceType <> '0390CD8C-D6D4-4C92-995B-08C7E18E6EC2'
            ) t   where 1=1 ${sqlWhere}
            ) m
        ]]>
    </select>
    <select id="excelToCustomerChangeList" resultType="java.util.Map">
        <![CDATA[
            SELECT
					m.num,
					m.ClueID,
					m.CustomerID,
					m.CustomerName,
					STUFF(m.CustomerMobile ,4,4,'****') CustomerMobile,

					CASE WHEN dbo.F_DictName(m.CustomerRank) <> '' THEN  dbo.F_DictName(m.CustomerRank) ELSE '1级' END CustomerRank,
					dbo.F_GetClueStatusName(m.Status,0) Status,
					m.InvalidReason,
					CASE WHEN m.ComeOverdueTime ='1900-01-01 00:00:00.000' THEN NULL ELSE m.ComeOverdueTime END ComeOverdueTime,
					CASE WHEN DATEDIFF(day,m.TradeOverdueTime,'1900-01-01')=0 THEN NULL ELSE m.TradeOverdueTime END TradeOverdueTime,
					dbo.F_GetSaleUserName(m.ConfirmUserId) ConfirmUserName,
					m.ConfirmTime,
					m.ProjectID,
            m.ProjectName,
					dbo.F_DictName(m.SourceType) SourceType,
					m.ReportTime,
					CASE WHEN DATEDIFF(day,m.TheFirstVisitDate,'1900-01-01')=0 THEN NULL ELSE m.TheFirstVisitDate END TheFirstVisitDate,
					m.ReportUserID ,
					m.ReportUserName ,
					m.ReportUserMobile ,
					m.ChannelName,
					m.OpportunityID,
					dbo.F_GetZJDF(m.OpportunityID) ZJDF,
                STUFF(( SELECT    ',' + r.RoomCode FROM dbo.B_Room r INNER JOIN dbo.B_Building b ON r.BuildingID=b.ID WHERE r.ID
                        IN
														(SELECT mt.RoomGUID FROM dbo.B_Opportunity o INNER JOIN dbo.B_CustomerAttach ca ON o.ID=ca.OpportunityID
														INNER JOIN dbo.C_MYTrade mt ON mt.OppGUID=ca.ID WHERE o.ID=m.OpportunityID)
                AND r.ProjectID in (select ID from B_Project where PID=#{projectID}) FOR XML PATH('') ), 1, 1, '') Room
					 FROM (
					 SELECT ROW_NUMBER() OVER(ORDER BY t.ReportTime DESC) num,* FROM (
						SELECT
                                b.ID ClueID ,
                                b.CustomerPotentialID CustomerID ,
                                b.Name CustomerName ,
                                b.Mobile CustomerMobile ,
                                CASE WHEN o.CustomerRank IS NOT NULL THEN o.CustomerRank ELSE b.CustomerRank END CustomerRank,
                                b.Status,
								                b.InvalidReason,
								                b.ComeOverdueTime,
								                b.TradeOverdueTime,
								                b.ConfirmUserId,
								                b.ConfirmTime,
                                b.IntentProjectID ProjectID ,
								                b.IntentProjectName ProjectName,
                                b.SourceType SourceTypeID,
                                b.SourceType,
                                b.ReportUserID ,
                                b.ReportUserName ,
                                b.ReportUserMobile ,
                                b.CreateTime AS ReportTime ,
								o.TheFirstVisitDate ,
                                CO.OrgName ChannelName,
                                b.ReportUserOrg,
								o.ID OpportunityID
                      FROM      B_Clue b
								LEFT JOIN dbo.B_Opportunity o ON b.ID=o.ClueID AND o.IsDel =0 AND o.ProjectID=#{projectID}
								LEFT JOIN B_ChannelOrg CO ON CO.ID=b.ReportUserOrg  AND CO.IsDel =0
								LEFT JOIN dbo.B_CustomerAttach A ON A.OpportunityID = o.ID  AND A.IsDel =0 AND A.ProjectID=#{projectID}
                      WHERE     b.IsDel = 0
                                AND b.IntentProjectID = #{projectID}
                                AND b.SourceType IS NOT NULL AND b.SourceType<>'0390CD8C-D6D4-4C92-995B-08C7E18E6EC2'
								) t  WHERE 1=1 ${sqlWhere}
                                ) m

								WHERE 1=1

  ]]>
    </select>
    <select id="getDistributionList_Select" resultType="java.util.Map">
        <![CDATA[
          SELECT co.ID,co.OrgName FROM dbo.B_ChannelOrg co
            INNER JOIN dbo.B_PojectChannelOrgRel pc ON co.ID=pc.OrgID AND pc.IsDel=0 AND pc.Status=1  AND pc.ProjectID=#{projectID}
            WHERE co.IsDel=0 AND co.Status=1  AND co.OrgCategory=1
        ]]>
    </select>
    <select id="CustomerChange_BakPageList_Select" resultType="java.util.Map">
        <![CDATA[
  
					SELECT 
					m.ClueID,
					m.CustomerID,
					m.CustomerName,
					m.CustomerMobile,

					CASE WHEN dbo.F_DictName(m.CustomerRank) <> '' THEN  dbo.F_DictName(m.CustomerRank) ELSE '1级' END CustomerRank,
					dbo.F_GetClueStatusName(m.Status,0) Status,
					m.InvalidReason,
					m.ComeOverdueTime,
					m.TradeOverdueTime,
					dbo.F_GetSaleUserName(m.ConfirmUserId) ConfirmUserName,
					m.ConfirmTime,
					m.ProjectID,
					dbo.F_DictName(m.SourceType) SourceType,
					m.ReportTime,
					m.TheFirstVisitDate,
					m.ReportUserID ,
					m.ReportUserName ,
					m.ReportUserMobile ,
					m.ChannelName,
					m.OpportunityID,
					dbo.F_GetZJDF(m.OpportunityID) ZJDF
					 FROM (
					 SELECT * FROM (
						SELECT  
                                b.ID ClueID ,
                                b.CustomerPotentialID CustomerID ,
                                b.Name CustomerName ,
                                b.Mobile CustomerMobile ,



                                CASE WHEN o.CustomerRank IS NOT NULL THEN o.CustomerRank ELSE b.CustomerRank END CustomerRank,
                                b.Status,
								b.InvalidReason,
								b.ComeOverdueTime,
								b.TradeOverdueTime,
								b.ConfirmUserId,
								b.ConfirmTime,
                                b.IntentProjectID ProjectID ,
                                b.SourceType,
                                b.ReportUserID ,
                                b.ReportUserName ,
                                b.ReportUserMobile ,
                                b.CreateTime AS ReportTime ,
								o.TheFirstVisitDate ,
                                CO.OrgName ChannelName,
								o.ID OpportunityID,
                b.Status Statu
                      FROM      B_Clue b
								LEFT JOIN dbo.B_Opportunity o ON b.ID=o.ClueID AND o.IsDel =0 AND o.ProjectID=#{projectID}
								LEFT JOIN B_ChannelOrg CO ON CO.ID=b.ReportUserOrg  AND CO.IsDel =0
								LEFT JOIN dbo.B_CustomerAttach A ON A.OpportunityID = o.ID  AND A.IsDel =0 AND A.ProjectID=#{projectID} 
                      WHERE     b.IsDel = 0
                                AND b.IntentProjectID = #{projectID} 



								) t  WHERE 1=1 ${sqlWhere}
                                ) m

        ]]>
    </select>
    <select id="SetExcelToCustomerChange_BakList" resultType="java.util.Map">
        <![CDATA[
            SELECT 
					m.num,
					m.CustomerID,
					m.CustomerName,
					m.CustomerMobile,
					STUFF(m.CustomerMobile ,4,4,'****') CustomerMobile,

					CASE WHEN dbo.F_DictName(m.CustomerRank) <> '' THEN  dbo.F_DictName(m.CustomerRank) ELSE '1级' END CustomerRank,
					dbo.F_GetClueStatusName(m.Status,0) Status,
					m.InvalidReason,
					CASE WHEN m.ComeOverdueTime ='1900-01-01' THEN NULL ELSE m.ComeOverdueTime END ComeOverdueTime,
					CASE WHEN DATEDIFF(day,m.TradeOverdueTime,'1900-01-01')=0 THEN NULL ELSE m.TradeOverdueTime END TradeOverdueTime,
					dbo.F_GetSaleUserName(m.ConfirmUserId) ConfirmUserName,
					m.ConfirmTime,
					m.ProjectID,
            m.ProjectName,
					dbo.F_DictName(m.SourceType) SourceType,
					m.ReportTime,
					CASE WHEN DATEDIFF(day,m.TheFirstVisitDate,'1900-01-01')=0 THEN NULL ELSE m.TheFirstVisitDate END TheFirstVisitDate,
					m.ReportUserID ,
					m.ReportUserName ,
					m.ReportUserMobile ,
					m.ChannelName,
					m.OpportunityID,
					dbo.F_GetZJDF(m.OpportunityID) ZJDF
					 FROM (
					 SELECT ROW_NUMBER() OVER(ORDER BY t.ReportTime DESC) num,* FROM (
						SELECT  
                                b.ID ClueID ,
                                b.CustomerPotentialID CustomerID ,
                                b.Name CustomerName ,
                                b.Mobile CustomerMobile ,



                                CASE WHEN o.CustomerRank IS NOT NULL THEN o.CustomerRank ELSE b.CustomerRank END CustomerRank,
                                b.Status,
                                b.Status Statu,
								                b.InvalidReason,
								                b.ComeOverdueTime,
								                b.TradeOverdueTime,
								                b.ConfirmUserId,
								                b.ConfirmTime,
                                b.IntentProjectID ProjectID ,
								                b.IntentProjectName ProjectName,
                                b.SourceType,
                                b.ReportUserID ,
                                b.ReportUserName ,
                                b.ReportUserMobile ,
                                b.CreateTime AS ReportTime ,
								o.TheFirstVisitDate ,
                                CO.OrgName ChannelName,
								o.ID OpportunityID
                      FROM      B_Clue b
								LEFT JOIN dbo.B_Opportunity o ON b.ID=o.ClueID AND o.IsDel =0 AND o.ProjectID=#{projectID} 
								LEFT JOIN B_ChannelOrg CO ON CO.ID=b.ReportUserOrg  AND CO.IsDel =0
                      WHERE     b.IsDel = 0
                                AND b.IntentProjectID = #{projectID}  



                                AND b.Status<>3
								) t  WHERE 1=1 ${sqlWhere}
                                ) m

            ]]>
    </select>
    <select id="CustomerChangeDetailAll_Select" resultType="java.util.Map">
        <![CDATA[
            select C.Name                                          CustomerName,
            STUFF(C.Mobile, 4, 4, '****')                   CustomerMobile,
            dbo.F_DictName(O.CustomerRank)                  CustomerRank,
            dbo.F_GetMediaLargeName(Cl.CognitiveChannel)    CognitiveChannel,
            dbo.F_GetMediaChildName(Cl.CognitiveChannelSub) CognitiveChannelSub,
            dbo.F_DictName(O.OpportunitySource)             OpportunitySource,
            dbo.F_DictName(O.Commercial)                    Commercial,
            O.CreateTime,
            O.TheFirstVisitDate,
            dbo.F_GetZJDF(O.ID)                             ZJDF,
            O.TheLatestFollowUpDate,
            dbo.F_DictName(O.IsLittleBooking)               IsLittleBooking,
            dbo.F_GetSaleUserName(O.SaleUserID)             SaleUserName,
            dbo.F_DictName(O.CustomerLevel)                 CustomerLevel,
            dbo.F_DictName(O.PropertyIntention)             PropertyIntention,
            dbo.F_DictName(A.DomicilePlace)                 DomicilePlace,
            dbo.F_DictName(A.HomeArea)                      HomeArea,
            dbo.F_DictName(A.WorkArea)                      WorkArea,
            dbo.F_DictName(A.AgeGroup)                      AgeGroup,
            A.Birthday,
            A.HomeAddress,
            dbo.F_DictName(A.PropertyNum)                   PropertyNum,
            dbo.F_DictName(A.Marriage)                      Marriage,
            dbo.F_DictName(A.Family)                        Family,
            dbo.F_DictName(A.Industry)                      Industry,
            C.IsOwner,
            dbo.F_DictName(C.IsEmployee)                    IsEmployee,
            dbo.F_DictName(C.CardType)                      CardType,
            C.CardID,
            dbo.F_DictName(C.AcceptFactor)                  AcceptFactor,
            dbo.F_DictName(C.Gender)                        Gender,
            C.Creator,
            ''                                              NeedArea,
            ''                                              IntertionTotal,
            Cl.ReportUserName,
            Ch.OrgName,

            dbo.F_GetStatusName(O.Status)                   Status

            from B_Customer C
            left join B_CustomerAttribute A on A.CustomerID = C.ID and A.IsDel = 0
            left join B_Opportunity O on C.ID = O.CustomerID and C.IsDel = 0
            left join B_Clue Cl on Cl.ID = O.ClueID
            left join B_ChannelOrg Ch on Ch.ID = Cl.ReportUserOrg
            where O.IsDel = 0
            AND C.ID = #{CustomerID}
            AND O.ProjectID = #{projectID}
        ]]>
    </select>
    <select id="CustomerChangeDetailAll_Select2" resultType="java.util.Map">
        <![CDATA[
            select C.Name                                         CustomerName,
            STUFF(C.Mobile, 4, 4, '****')                  CustomerMobile,
            dbo.F_DictName(O.CustomerRank)                 CustomerRank,
            dbo.F_GetMediaLargeName(O.CognitiveChannel)    CognitiveChannel,
            dbo.F_GetMediaChildName(O.CognitiveChannelSub) CognitiveChannelSub,
            dbo.F_DictName(O.SourceType)                   OpportunitySource,

            ''                                             Commercial,
            O.CreateTime,
            ''                                             TheFirstVisitDate,
            ''                                             ZJDF,
            O.TheLatestFollowUpDate,
            ''                                             IsLittleBooking,
            ''                                             SaleUserName,
            ''                                             CustomerLevel,

            ''                                             PropertyIntention,
            dbo.F_DictName(A.DomicilePlace)                DomicilePlace,
            dbo.F_DictName(A.HomeArea)                     HomeArea,
            dbo.F_DictName(A.WorkArea)                     WorkArea,
            dbo.F_DictName(A.AgeGroup)                     AgeGroup,
            ''                                             Birthday,
            A.HomeAddress,
            dbo.F_DictName(A.PropertyNum)                  PropertyNum,
            dbo.F_DictName(A.Marriage)                     Marriage,
            dbo.F_DictName(A.Family)                       Family,
            dbo.F_DictName(A.Industry)                     Industry,
            C.IsOwner,
            ''                                             IsEmployee,
            dbo.F_DictName(C.CardType)                     CardType,
            C.CardID,
            dbo.F_DictName(C.AcceptFactor)                 AcceptFactor,
            dbo.F_DictName(C.Gender)                       Gender,
            C.Creator,
            ''                                             NeedArea,
            ''                                             IntertionTotal,
            O.ReportUserName,
            Ch.OrgName,

            case
            when O.Status = 1 then '报备'
            when O.Status = 2 then '确认带看'
            when O.Status = 3 then '无效'
            when O.Status = 41 then '丢失' end           Status

            from B_CustomerPotential C
            left join B_CustomerPotentialAttribute A on A.CustomerPotentialID = C.ID and A.IsDel = 0
            left join B_Clue O on C.ID = O.CustomerPotentialID and C.IsDel = 0 AND O.ID = #{clueID}
            left join B_ChannelOrg Ch on Ch.ID = O.ReportUserOrg
            where O.IsDel = 0
            AND C.ID = #{customerID}
            AND O.IntentProjectID = #{projectID}
        ]]>
    </select>
    <select id="getB_OpportunityByClueID" resultType="java.util.Map">
        <![CDATA[
            SELECT CustomerID
            FROM dbo.B_Opportunity
            WHERE ClueID = #{clueID}
            AND IsDel = 0
        ]]>
    </select>
    <!-- 验证是否是本项目老业主 -->
    <select id="IsProjectOwner_Select" resultType="java.util.Map">
        <![CDATA[
          select a.ID from B_Customer a inner join B_CustomerAttach b on a.id = b.CustomerID where a.Status=1
 			and a.IsOwner=1 and b.ProjectID=#{ProjectID} and  Mobile=#{Mobile}
        ]]>
    </select>
</mapper>
